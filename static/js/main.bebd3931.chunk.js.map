{"version":3,"sources":["Counter/Counter.js","App.js","index.js"],"names":["Counter","counter","addOne","add100","increase","type","onClick","App","state","setState","value","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAIaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,SAA5B,OACrB,oCACE,qCAEG,IACAH,GAEH,4BACEI,KAAK,SACLC,QAASJ,GAFX,WAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,WAMA,4BACEE,KAAK,SACLC,QAASF,GAFX,eCwBWG,G,kNA1CbC,MAAQ,CACNP,QAAS,G,EAGXC,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBP,QAASO,EAAMP,QAAU,O,EAI7BE,OAAS,WACP,EAAKM,UAAS,SAAAD,GAAK,MAAK,CACtBP,QAASO,EAAMP,QAAU,S,EAI7BG,SAAW,WACT,IAAMM,EAAQ,EAAKF,MAAMP,QAAU,EAEnC,EAAKC,SAEDQ,EAAQ,IAAM,GAChB,EAAKP,U,uDAIC,IACAF,EAAYU,KAAKH,MAAjBP,QAER,OACE,6BAASW,UAAU,OACjB,kBAAC,EAAD,CACEX,QAASA,EACTC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,gB,GApCPS,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bebd3931.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.scss';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ counter, addOne, add100, increase }) => (\n  <>\n    <h1>\n      Count:\n      {' '}\n      {counter}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add one\n    </button>\n    <button\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  counter: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Counter } from './Counter/Counter';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    counter: 0,\n  };\n\n  addOne = () => {\n    this.setState(state => ({\n      counter: state.counter + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      counter: state.counter + 100,\n    }));\n  };\n\n  increase = () => {\n    const value = this.state.counter + 1;\n\n    this.addOne();\n\n    if (value % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    const { counter } = this.state;\n\n    return (\n      <section className=\"App\">\n        <Counter\n          counter={counter}\n          addOne={this.addOne}\n          add100={this.add100}\n          increase={this.increase}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}